# This replaces ds_select_dst
route[own_ds_select_dst] {
        if (!ds_select($var(dispatcherSet),"4")) {
                xlog("L_ERR", "getDispatcheDestinations $var(dispatcherSet) FAILED, no destinations");
                return(-1);
        }
        #Select random entry from list
        if (route(own_ds_next_dst)) {
                return(1);
        } 
        return(-1);
}


# This replaces ds_next_dst
route [own_ds_next_dst] {
        #Add up all the rweight parameters of all active dispatcher targets
        $var(len)=$cnt($xavp(_dsdst_[*]));
        $var(i)=0;
        $var(sum)=0;
        # Sum up the rweights of the dispatcher tables
        while($var(i)<$var(len)) {
                $var(attrs)=$xavp(_dsdst_[$var(i)]=>attrs);
                $var(wi)=0;
                if ($var(attrs)==0) { # No attributes => $var(attrs)=0 ðŸ¤·
                        $var(wi)=1;
                } else {
                        # In this example we use the rweight parameter
                        $var(rweight)=$(var(attrs){param.value,rweight}); 
                        $var(wi)=$(var(rweight){s.int}); #Transform to integer
                }
                $var(sum)=$var(sum)+$var(wi);
                $var(i)=$var(i)+1;
        }

        # If sum of weights is 0, we have no active dispatcher targets
        if ($var(sum)<=0) {
                xlog("L_ERR", "own_ds_next_dst weight-sum: $var(sum) is to low; $var(len) dispatchers in list  => likely no active gateways left");
                return(-1);
        }

        # Use a random value for dispatching, you could also use a hash over the call-id. The s.corehash transformation is usefull for this
        $var(rand)=$RANDOM mod $var(sum);

        #Add up all the rweight parameters for all active dispacther targets...
        # ... and take the dispatcher if it is larger than $var(rand)
        $var(selected)=0;
        $var(sum)=0;
        $var(i)=0;
