<?xml version="1.0" encoding='ISO-8859-1'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" [

<!-- Include general documentation entities -->
<!ENTITY % docentities SYSTEM "../../../../doc/docbook/entities.xml">
%docentities;

]>
<!-- Module User's Guide -->

<chapter>
	
	<title>&adminguide;</title>
	
	<section>
	<title>Overview</title>
	<para>
		This module hides the SIP routing headers that show topology details.
		It it is not affected by the server being transaction stateless or
		stateful. The script interpreter gets the SIP messages decoded,
		so all existing functionality is preserved.
	</para>
	<para>
		The module is transparent for the configuration writer. It only needs to be
		loaded (tune the parameters if needed). The SIP server can be restarted
		whitout affecting ongoing calls - once it is up, can encode/decode
		topology details, thus no call will be lost.
	</para>
	<para>
		By using same mask_key, many SIP servers can decode the message,
		for example, applicable for servers behind load balancers.
	</para>
	<section id="sec-ip-trust">
		<title>Trust/Untrust destination</title>
		<para>
		The module can be used to determine if an destination IP address 
		and port matches any of the addresses stored in a cached &kamailio; 
		database table. IP addresses in the database table can be subnet addresses.
		Port 0 in cached database table matches any port. This can be activated
		by <varname>allow_ip_check</varname> parameter.
		</para>
		<para>
		Addresses stored in the database table can be grouped together into two 
		groups specified by a trust identifier (trust equal 1 means trust IP, 
		trust equals 0 means untrust IP). 
		</para>
	</section>
	</section>
	<section>
	<title>Dependencies</title>
	<section>
		<title>&kamailio; Modules</title>
		<para>
		The following modules must be loaded before this module:
			<itemizedlist>
			<listitem>
			<para>
				<emphasis>rr module</emphasis> - server must perform record
				routing to ensure in-dialog requests are encoded/decoded.
			</para>
			</listitem>
			</itemizedlist>
		</para>
	</section>
	<section>
		<title>External Libraries or Applications</title>
		<para>
		The following libraries or applications must be installed before running
		&kamailio; with this module loaded:
			<itemizedlist>
			<listitem>
			<para>
				<emphasis>None</emphasis>. In the future the module can be
				enhanced to use a stronger encryption algorithm.
			</para>
			</listitem>
			</itemizedlist>
		</para>
	</section>
	</section>
	<section>
	<title>Parameters</title>
	<section>
		<title><varname>mask_key</varname> (str)</title>
		<para>
		Keyword to mask the headers.
		</para>
		<para>
		<emphasis>
			Default value is "_static_value_".
		</emphasis>
		</para>
		<example>
		<title>Set <varname>mask_key</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("topoh", "mask_key", "some secret here")
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>mask_ip</varname> (str)</title>
		<para>
		IP address to be used in masked headers to build valid
		SIP URIs. Can be any IP address, even a private-space or non-existing
		IP address (e.g., 192.168.1.1, 127.0.0.2), including the SIP server
		address, but must not be an address potentially used by clients.
		It is not used at all for SIP routing.
		</para>
		<para>
		<emphasis>
			Default value is "127.0.0.8".
		</emphasis>
		</para>
		<example>
		<title>Set <varname>mask_ip</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("topoh", "mask_ip", "192.168.0.1")
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>mask_callid</varname> (integer)</title>
		<para>
			Whether to encode the Call-id: header. Some SIP extensions include
			the Call-id in the SIP message payload or header, so it is safe to
			not encode Call-id in such cases. Well-known extensions such as
			call transfer or conference join will be added to work with encoded
			Call-id.
		</para>
		<para>
			NOTE: if you are using dialog module to terminate calls and this
			parameter is enabled, you must set the dialog module parameter
			'lreq_callee_headers' to include the header: 'TH: dlh\r\n'.
		</para>
		<para>
		<emphasis>
			Default value is 0 (do not mask).
		</emphasis>
		</para>
		<example>
		<title>Set <varname>mask_callid</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("topoh", "mask_callid", 1)
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>uparam_name</varname> (str)</title>
		<para>
		Name of URI parameter where to store encoded value.
		</para>
		<para>
		<emphasis>
			Default value is "line".
		</emphasis>
		</para>
		<example>
		<title>Set <varname>uparam_name</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("topoh", "uparam_name", "myparam")
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>uparam_prefix</varname> (str)</title>
		<para>
		Prefix to be added in encoded URI parameters.
		</para>
		<para>
		<emphasis>
			Default value is "sr-".
		</emphasis>
		</para>
		<example>
		<title>Set <varname>uparam_prefix</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("topoh", "uparam_prefix", "xyz")
...
</programlisting>
		</example>
	</section>
		<section>
		<title><varname>vparam_name</varname> (str)</title>
		<para>
		Name of Via: parameter used to store encoded value.
		</para>
		<para>
		<emphasis>
			Default value is "branch".
		</emphasis>
		</para>
		<example>
		<title>Set <varname>vparam_name</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("topoh", "vparam_name", "myv")
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>vparam_prefix</varname> (str)</title>
		<para>
		Prefix to be added in encoded Via: parameters.
		</para>
		<para>
		<emphasis>
			Default value is "z9hG4bKsr-".
		</emphasis>
		</para>
		<example>
		<title>Set <varname>vparam_prefix</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("topoh", "vparam_prefix", "xyz")
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>callid_prefix</varname> (str)</title>
		<para>
		Prefix to be added in encoded Call-ID: headers.
		</para>
		<para>
		<emphasis>
			Default value is "!!:".
		</emphasis>
		</para>
		<example>
		<title>Set <varname>callid_prefix</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("topoh", "callid_prefix", "***")
...
</programlisting>
		</example>
	</section>
	<section>
		<title><varname>sanity_checks</varname> (integer)</title>
		<para>
			If set to 1, topoh module will bind to sanity module in order
			to perform sanity checks over received SIP request. Default
			sanity checks are done. It is useful to check if received request
			is well formated before proceeding to encoding/decoding.
		</para>
		<para>
		<emphasis>
			Default value is 0 (do not bind to sanity module).
		</emphasis>
		</para>
		<example>
		<title>Set <varname>sanity_checks</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("topoh", "sanity_checks", 1)
...
</programlisting>
		</example>
	</section>
	
	<section id ="topoh.db_url">
		<title><varname>db_url</varname> (string)</title>
		<para>
		This is URL of the database to be used to read IP into cache
		table.
		</para>
		<para>
		<emphasis>
			Default value is <quote>NULL</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>db_url</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("topoh", "db_url", "&exampledb;")
...
</programlisting>
		</example>
	</section>
	<section id ="topoh.address_table">
		<title><varname>address_table</varname> (string)</title>
		<para>
		The name of the database table containing trusted/untrusted IP subnets
		</para>
		<para>
		<emphasis>
		Default value is <quote>topoh_address</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>address_table</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("topoh", "address_table", "topoh_address_extra")
...
</programlisting>
		</example>
	</section>
	<section id ="topoh.trust_col">
		<title><varname>trust_col</varname> (string)</title>
		<para>
		Name of address table column containing the type of the address.
		1 = trust, 0 = untrust
		</para>
		<para>
		<emphasis>
		Default value is <quote>trust</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>trust_col</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("topoh", "trust_col", "type")
...
</programlisting>
		</example>
	</section>
	<section id ="topoh.ip_addr_col">
		<title><varname>ip_addr_col</varname> (string)</title>
		<para>
		Name of address table column containing the IP address
		part of the address.
		</para>
		<para>
		<emphasis>
		Default value is <quote>ip_addr</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>ip_addr_col</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("topoh", "ip_addr_col", "ip_address")
...
</programlisting>
		</example>
	</section>
	<section id ="topoh.mask_col">
		<title><varname>mask_col</varname> (string)</title>
		<para>
		Name of address table column containing the network mask of
		the address.  Possible values are 0-32 for IPv4 and 0-128 for
		IPv6 addresses.
		</para>
		<para>
		<emphasis>
		Default value is <quote>mask</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>mask_col</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("topoh", "mask_col", "subnet_length")
...
</programlisting>
		</example>
	</section>
	<section id ="topoh.port_col">
		<title><varname>port_col</varname> (string)</title>
		<para>
		Name of address table column containing the port
		part of the address.
		</para>
		<para>
		<emphasis>
		Default value is <quote>port</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>port_col</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("topoh", "port_col", "port")
...
</programlisting>
		</example>
	</section>
	<section id ="topoh.max_subnets">
		<title><varname>max_subnets</varname> (int)</title>
		<para>
			The maximum number of subnet addresses to be loaded from
			address table.
		</para>
		<para>
		<emphasis>
		Default value is <quote>512</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>max_subnets</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("topoh", "max_subnets", 1024)
...
</programlisting>
		</example>
	</section>
	<section id ="topoh.trust_mode">
		<title><varname>trust_mode</varname> (int)</title>
		<para>
			Lookup if the destination IP in trust or in untrust
			table.
			
		</para>
		<para>
		<emphasis>
		Default value is <quote>1</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>trust_mode</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("topoh", "trust_mode", 0)
...
</programlisting>
		</example>
	</section>
	<section id ="topoh.allow_ip_check">
		<title><varname>allow_ip_check</varname> (int)</title>
		<para>
			Enable or disable destination IP check.
			
		</para>
		<para>
		<emphasis>
		Default value is <quote>0</quote>.
		</emphasis>
		</para>
		<example>
		<title>Set <varname>allow_ip_check</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("topoh", "allow_ip_check", 1)
...
</programlisting>
		</example>
	</section>

	</section>
</chapter>

