---
name: alpine docker image
on:
  push:
    branches:
    - master
    tags:
    - '5.6.*'
    - '5.7.*'

# This environments for backward compatability with build script for DockerHub
env:
  IMAGE_NAME: kamailio-ci
  SOURCE_BRANCH: ${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: test
      run: |
        git submodule init
        git submodule update
        tar cz -C pkg/docker/alpine -f kamailio_img.tar.gz Dockerfile
        pwd
        find pkg/docker/alpine

    - name: Build and push minimal
      uses: docker/build-push-action@v4
      with:
        context: pkg/docker/alpine
        file: Dockerfile
        push: false
        tags: master

    - name: Compile Kamailio source
      run: |
        git submodule init
        git submodule update
        cd `pwd`/pkg/docker/alpine
        ./hooks/pre_build || true

    - name: Build image archives and apk files
      run: |
        cd `pwd`/pkg/docker/alpine
        sudo chown -R ${USER}:${USER} `pwd`
        ./hooks/build

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        # list of Docker images to use as base name for tags
        images: |
          ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
        # generate Docker tags based on the following events/attributes
        tags: |
          type=pep440,pattern={{version}}
          type=pep440,pattern={{major}}.{{minor}}
          type=pep440,pattern={{major}}
          type=ref,event=branch

    - name: Docker meta alpine
      id: meta-alpine
      uses: docker/metadata-action@v4
      with:
        # list of Docker images to use as base name for tags
        images: |
          ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
        # generate Docker tags based on the following events/attributes
        tags: |
          type=pep440,pattern={{version}}
          type=pep440,pattern={{major}}.{{minor}}
          type=pep440,pattern={{major}}
          type=ref,event=branch
        flavor: |
          suffix=-alpine

    - name: Docker meta debug
      id: meta-debug
      uses: docker/metadata-action@v4
      with:
        # list of Docker images to use as base name for tags
        images: |
          ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
        # generate Docker tags based on the following events/attributes
        tags: |
          type=pep440,pattern={{version}}
          type=pep440,pattern={{major}}.{{minor}}
          type=pep440,pattern={{major}}
          type=ref,event=branch
        flavor: |
          suffix=-debug

    - name: Login to GitHub Container Registry
      if: ${{ github.event_name != 'pull_request' }}
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push minimal
      uses: docker/build-push-action@v4
      with:
        context: pkg/docker/alpine
        file: pkg/docker/alpine/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push with apk
      uses: docker/build-push-action@v4
      with:
        context: pkg/docker/alpine
        file: pkg/docker/Dockerfile.alpine
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-alpine.outputs.tags }}
        labels: ${{ steps.meta-alpine.outputs.labels }}

    - name: Build and push with debug
      uses: docker/build-push-action@v4
      with:
        context: pkg/docker/alpine
        file: pkg/docker/Dockerfile.debug
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-debug.outputs.tags }}
        labels: ${{ steps.meta-debug.outputs.labels }}
