Configuration Variables for tm
==============================

                  [ this file is autogenerated, do not edit ]


 1. tm.auto_inv_100_reason
        reason text of the automatically send 100 to an INVITE.
        Default: trying -- your call is important to us.
        Type: string.

 2. tm.default_reason
        default SIP reason phrase sent by t_reply(), if the function
        cannot retrieve its parameters.
        Default: Server Internal Error.
        Type: string.

 3. tm.ac_extra_hdrs
        header fields prefixed by this parameter value are included in
        the CANCEL and negative ACK messages if they were present in
        the outgoing INVITE (depends on reparse_invite).
        Default: <unknown:str>.
        Type: string.

 4. tm.ruri_matching
        perform Request URI check in transaction matching.
        Default: 1.
        Range: 0 - 1.
        Type: integer.

 5. tm.via1_matching
        perform first Via header check in transaction matching.
        Default: 1.
        Range: 0 - 1.
        Type: integer.

 6. tm.callid_matching
        perform callid check in transaction matching.
        Default: 0.
        Type: integer.

 7. tm.fr_timer
        timer which hits if no final reply for a request or ACK for a
        negative INVITE reply arrives (in milliseconds).
        Default: 30000.
        Type: integer.

 8. tm.fr_inv_timer
        timer which hits if no final reply for an INVITE arrives after
        a provisional message was received (in milliseconds).
        Default: 120000.
        Type: integer.

 9. tm.fr_inv_timer_next
        The value [ms] of fr_inv_timer for subsequent branches during
        serial forking..
        Default: 30000.
        Type: integer.

10. tm.wt_timer
        time for which a transaction stays in memory to absorb delayed
        messages after it completed.
        Default: 5000.
        Type: integer.

11. tm.delete_timer
        time after which a to-be-deleted transaction currently ref-ed
        by a process will be tried to be deleted again..
        Default: 200.
        Type: integer.

12. tm.retr_timer1
        initial retransmission period (in milliseconds).
        Default: 500.
        Type: integer.

13. tm.retr_timer2
        maximum retransmission period (in milliseconds).
        Default: 4000.
        Type: integer.

14. tm.max_inv_lifetime
        maximum time an invite transaction can live from the moment of
        creation.
        Default: 180000.
        Type: integer.

15. tm.max_noninv_lifetime
        maximum time a non-invite transaction can live from the moment
        of creation.
        Default: 32000.
        Type: integer.

16. tm.noisy_ctimer
        if set, INVITE transactions that time-out (FR INV timer) will
        be always replied.
        Default: 1.
        Range: 0 - 1.
        Type: integer.

17. tm.auto_inv_100
        automatically send 100 to an INVITE.
        Default: 1.
        Range: 0 - 1.
        Type: integer.

18. tm.unix_tx_timeout
        Unix socket transmission timeout, in milliseconds.
        Default: 500.
        Type: integer.

19. tm.restart_fr_on_each_reply
        restart final response timer on each provisional reply.
        Default: 1.
        Range: 0 - 1.
        Type: integer.

20. tm.pass_provisional_replies
        enable/disable passing of provisional replies to
        TMCB_LOCAL_RESPONSE_OUT callbacks.
        Default: 0.
        Range: 0 - 1.
        Type: integer.

21. tm.aggregate_challenges
        if the final response is a 401 or a 407, aggregate all the
        authorization headers (challenges) (rfc3261 requires this to be
        on).
        Default: 1.
        Range: 0 - 1.
        Type: integer.

22. tm.unmatched_cancel
        determines how CANCELs with no matching transaction are handled
        (0: statefull forwarding, 1: stateless forwarding, 2: drop).
        Default: 0.
        Range: 0 - 2.
        Type: integer.

23. tm.default_code
        default SIP response code sent by t_reply(), if the function
        cannot retrieve its parameters.
        Default: 500.
        Range: 400 - 699.
        Type: integer.

24. tm.reparse_invite
        if set to 1, the CANCEL and negative ACK requests are
        constructed from the INVITE message which was sent out instead
        of building them from the received request.
        Default: 1.
        Range: 0 - 1.
        Type: integer.

25. tm.blst_503
        if set to 1, blacklist 503 SIP response sources.
        Default: 0.
        Range: 0 - 1.
        Type: integer.

26. tm.blst_503_def_timeout
        default 503 blacklist time (in s), when no Retry-After header
        is present.
        Default: 0.
        Type: integer.

27. tm.blst_503_min_timeout
        minimum 503 blacklist time (in s).
        Default: 0.
        Type: integer.

28. tm.blst_503_max_timeout
        maximum 503 blacklist time (in s).
        Default: 3600.
        Type: integer.

29. tm.blst_methods_add
        bitmap of method types that trigger blacklisting on transaction
        timeouts.
        Default: 1.
        Type: integer.

30. tm.blst_methods_lookup
        Bitmap of method types that are looked-up in the blacklist
        before statefull forwarding.
        Default: -9.
        Type: integer.

31. tm.cancel_b_method
        How to cancel branches on which no replies were received: 0 -
        fake reply, 1 - retransmitting the request, 2 - send cancel.
        Default: 1.
        Range: 0 - 2.
        Type: integer.

32. tm.reparse_on_dns_failover
        if set to 1, the SIP message after a DNS failover is
        constructed from the outgoing message buffer of the failed
        branch instead of from the received request.
        Default: 1.
        Range: 0 - 1.
        Type: integer.

33. tm.disable_6xx_block
        if set to 1, 6xx is treated like a normal reply (breaks rfc).
        Default: 0.
        Range: 0 - 1.
        Type: integer.

34. tm.local_ack_mode
        if set to 1 or 2, local 200 ACKs are sent to the same address
        as the corresponding INVITE (1) or the source of the 200 reply
        (2) instead of using the contact and the route set (it breaks
        the rfc, if  it is not set to 0 but allows dealing with NATed
        contacts in some simple cases).
        Default: 0.
        Range: 0 - 2.
        Type: integer.

35. tm.local_cancel_reason
        if set to 1, a Reason header is added to locally generated
        CANCELs (see RFC3326).
        Default: 1.
        Range: 0 - 1.
        Type: integer.

36. tm.e2e_cancel_reason
        if set to 1, Reason headers from received CANCELs are copied
        into the corresponding generated hop-by-hop CANCELs.
        Default: 1.
        Range: 0 - 1.
        Type: integer.

