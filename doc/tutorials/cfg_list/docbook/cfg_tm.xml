<?xml version="1.0" encoding="UTF-8"?>
<!-- this file is autogenerated, do not edit! -->
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
	"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<chapter id="config_vars.tm">
	<title> Configuration Variables for tm</title>


<section id="tm.auto_inv_100_reason">
    <title>tm.auto_inv_100_reason</title>
    <para>
        reason text of the automatically send 100 to an INVITE.
    </para>
    <para>Default value: trying -- your call is important to us.</para>
    <para>Type: string.</para>
    <para>
    </para>
</section>

<section id="tm.default_reason">
    <title>tm.default_reason</title>
    <para>
        default SIP reason phrase sent by t_reply(), if the function
        cannot retrieve its parameters.
    </para>
    <para>Default value: Server Internal Error.</para>
    <para>Type: string.</para>
    <para>
    </para>
</section>

<section id="tm.ac_extra_hdrs">
    <title>tm.ac_extra_hdrs</title>
    <para>
        header fields prefixed by this parameter value are included in
        the CANCEL and negative ACK messages if they were present in
        the outgoing INVITE (depends on reparse_invite).
    </para>
    <para>Default value: &lt;unknown:str&gt;.</para>
    <para>Type: string.</para>
    <para>
    </para>
</section>

<section id="tm.ruri_matching">
    <title>tm.ruri_matching</title>
    <para>
        perform Request URI check in transaction matching.
    </para>
    <para>Default value: 1.</para>
    <para>Range: 0 - 1.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.via1_matching">
    <title>tm.via1_matching</title>
    <para>
        perform first Via header check in transaction matching.
    </para>
    <para>Default value: 1.</para>
    <para>Range: 0 - 1.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.callid_matching">
    <title>tm.callid_matching</title>
    <para>
        perform callid check in transaction matching.
    </para>
    <para>Default value: 0.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.fr_timer">
    <title>tm.fr_timer</title>
    <para>
        timer which hits if no final reply for a request or ACK for a
        negative INVITE reply arrives (in milliseconds).
    </para>
    <para>Default value: 30000.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.fr_inv_timer">
    <title>tm.fr_inv_timer</title>
    <para>
        timer which hits if no final reply for an INVITE arrives after
        a provisional message was received (in milliseconds).
    </para>
    <para>Default value: 120000.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.fr_inv_timer_next">
    <title>tm.fr_inv_timer_next</title>
    <para>
        The value [ms] of fr_inv_timer for subsequent branches during
        serial forking..
    </para>
    <para>Default value: 30000.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.wt_timer">
    <title>tm.wt_timer</title>
    <para>
        time for which a transaction stays in memory to absorb delayed
        messages after it completed.
    </para>
    <para>Default value: 5000.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.delete_timer">
    <title>tm.delete_timer</title>
    <para>
        time after which a to-be-deleted transaction currently ref-ed
        by a process will be tried to be deleted again..
    </para>
    <para>Default value: 200.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.retr_timer1">
    <title>tm.retr_timer1</title>
    <para>
        initial retransmission period (in milliseconds).
    </para>
    <para>Default value: 500.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.retr_timer2">
    <title>tm.retr_timer2</title>
    <para>
        maximum retransmission period (in milliseconds).
    </para>
    <para>Default value: 4000.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.max_inv_lifetime">
    <title>tm.max_inv_lifetime</title>
    <para>
        maximum time an invite transaction can live from the moment of
        creation.
    </para>
    <para>Default value: 180000.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.max_noninv_lifetime">
    <title>tm.max_noninv_lifetime</title>
    <para>
        maximum time a non-invite transaction can live from the moment
        of creation.
    </para>
    <para>Default value: 32000.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.noisy_ctimer">
    <title>tm.noisy_ctimer</title>
    <para>
        if set, INVITE transactions that time-out (FR INV timer) will
        be always replied.
    </para>
    <para>Default value: 1.</para>
    <para>Range: 0 - 1.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.auto_inv_100">
    <title>tm.auto_inv_100</title>
    <para>
        automatically send 100 to an INVITE.
    </para>
    <para>Default value: 1.</para>
    <para>Range: 0 - 1.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.unix_tx_timeout">
    <title>tm.unix_tx_timeout</title>
    <para>
        Unix socket transmission timeout, in milliseconds.
    </para>
    <para>Default value: 500.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.restart_fr_on_each_reply">
    <title>tm.restart_fr_on_each_reply</title>
    <para>
        restart final response timer on each provisional reply.
    </para>
    <para>Default value: 1.</para>
    <para>Range: 0 - 1.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.pass_provisional_replies">
    <title>tm.pass_provisional_replies</title>
    <para>
        enable/disable passing of provisional replies to
        TMCB_LOCAL_RESPONSE_OUT callbacks.
    </para>
    <para>Default value: 0.</para>
    <para>Range: 0 - 1.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.aggregate_challenges">
    <title>tm.aggregate_challenges</title>
    <para>
        if the final response is a 401 or a 407, aggregate all the
        authorization headers (challenges) (rfc3261 requires this to be
        on).
    </para>
    <para>Default value: 1.</para>
    <para>Range: 0 - 1.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.unmatched_cancel">
    <title>tm.unmatched_cancel</title>
    <para>
        determines how CANCELs with no matching transaction are handled
        (0: statefull forwarding, 1: stateless forwarding, 2: drop).
    </para>
    <para>Default value: 0.</para>
    <para>Range: 0 - 2.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.default_code">
    <title>tm.default_code</title>
    <para>
        default SIP response code sent by t_reply(), if the function
        cannot retrieve its parameters.
    </para>
    <para>Default value: 500.</para>
    <para>Range: 400 - 699.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.reparse_invite">
    <title>tm.reparse_invite</title>
    <para>
        if set to 1, the CANCEL and negative ACK requests are
        constructed from the INVITE message which was sent out instead
        of building them from the received request.
    </para>
    <para>Default value: 1.</para>
    <para>Range: 0 - 1.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.blst_503">
    <title>tm.blst_503</title>
    <para>
        if set to 1, blacklist 503 SIP response sources.
    </para>
    <para>Default value: 0.</para>
    <para>Range: 0 - 1.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.blst_503_def_timeout">
    <title>tm.blst_503_def_timeout</title>
    <para>
        default 503 blacklist time (in s), when no Retry-After header
        is present.
    </para>
    <para>Default value: 0.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.blst_503_min_timeout">
    <title>tm.blst_503_min_timeout</title>
    <para>
        minimum 503 blacklist time (in s).
    </para>
    <para>Default value: 0.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.blst_503_max_timeout">
    <title>tm.blst_503_max_timeout</title>
    <para>
        maximum 503 blacklist time (in s).
    </para>
    <para>Default value: 3600.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.blst_methods_add">
    <title>tm.blst_methods_add</title>
    <para>
        bitmap of method types that trigger blacklisting on transaction
        timeouts.
    </para>
    <para>Default value: 1.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.blst_methods_lookup">
    <title>tm.blst_methods_lookup</title>
    <para>
        Bitmap of method types that are looked-up in the blacklist
        before statefull forwarding.
    </para>
    <para>Default value: -9.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.cancel_b_method">
    <title>tm.cancel_b_method</title>
    <para>
        How to cancel branches on which no replies were received: 0 -
        fake reply, 1 - retransmitting the request, 2 - send cancel.
    </para>
    <para>Default value: 1.</para>
    <para>Range: 0 - 2.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.reparse_on_dns_failover">
    <title>tm.reparse_on_dns_failover</title>
    <para>
        if set to 1, the SIP message after a DNS failover is
        constructed from the outgoing message buffer of the failed
        branch instead of from the received request.
    </para>
    <para>Default value: 1.</para>
    <para>Range: 0 - 1.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.disable_6xx_block">
    <title>tm.disable_6xx_block</title>
    <para>
        if set to 1, 6xx is treated like a normal reply (breaks rfc).
    </para>
    <para>Default value: 0.</para>
    <para>Range: 0 - 1.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.local_ack_mode">
    <title>tm.local_ack_mode</title>
    <para>
        if set to 1 or 2, local 200 ACKs are sent to the same address
        as the corresponding INVITE (1) or the source of the 200 reply
        (2) instead of using the contact and the route set (it breaks
        the rfc, if  it is not set to 0 but allows dealing with NATed
        contacts in some simple cases).
    </para>
    <para>Default value: 0.</para>
    <para>Range: 0 - 2.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.local_cancel_reason">
    <title>tm.local_cancel_reason</title>
    <para>
        if set to 1, a Reason header is added to locally generated
        CANCELs (see RFC3326).
    </para>
    <para>Default value: 1.</para>
    <para>Range: 0 - 1.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

<section id="tm.e2e_cancel_reason">
    <title>tm.e2e_cancel_reason</title>
    <para>
        if set to 1, Reason headers from received CANCELs are copied
        into the corresponding generated hop-by-hop CANCELs.
    </para>
    <para>Default value: 1.</para>
    <para>Range: 0 - 1.</para>
    <para>Type: integer.</para>
    <para>
    </para>
</section>

</chapter>
